# ID of witness controlled by this node (e.g. "1.5.5", quotes are required, may specify multiple times)
witness-id = "1.5.1"
witness-id = "1.5.2"
witness-id = "1.5.3"
witness-id = "1.5.4"
witness-id = "1.5.5"
witness-id = "1.5.6"
witness-id = "1.5.7"
witness-id = "1.5.8"
witness-id = "1.5.9"
witness-id = "1.5.10"
witness-id = "1.5.11"

# Tuple of [PublicKey, WIF private key] (may specify multiple times)
private-key = ["RAY6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]
private-key = ["RAY8Kun8Nw34T5tb2Zm2iBmjxMjXqu41JvoJjhHAyrPKm1js5vMbi","5K6DKQJNQbNjY8WQXTS78yGHeKh9dBh8xt8uJ2v1C3vdkBpKgmf"]
private-key = ["RAY6qqPWFE6bSEfSVzwZevy5nXajhYqsHW2vns3G1V39rxvjD4kEf","5KBKondGrabxfTHryho5354aTCa63SdhE3N62Q6sThYsTypNWVM"]
private-key = ["RAY5V1n85299k53UgYfDD7GHYe1Sr31YmNKEnYc3t7PBQi4qxkjKT","5KYdCmjvjbdEhTBuNt8ZQxK2hWa41W4k71nsHnM2QhaVpyZ1VvU"]
private-key = ["RAY6wQQ4g4tKKzzQgt86rQvDcseDebgNhbtUHr3bh4GVfeXQiiyzA","5KeF6cwSL7PpouYLkR7B5RXFCtrHvGeSXJqhyNS13MNbZPE6m4p"]
private-key = ["RAY7PTpC9B5c1CNgrVvVRPi5Ftb99yxB3dpJiaE83AgrtRnohFVBf","5JXtGJzBJCGYJ8pVKjo7MSqnXMfHa8SoyndFaecBuNLb7AGpkcZ"]
private-key = ["RAY8mNzAEv18KiusyzdmoeaEAsVHJdMsArswwqrViQ8nHiFGH54UW","5JjSTHtPmrQCv9MD6ad9mz977cMkSny8rLEwgf2GyR27k97jAKL"]
private-key = ["RAY6f8gHTmkmU32yWVyr2k7SdsA2s8rda4pgPfdTxQMqdBRYGTM2i","5JvqdLRTxAoNB9i5yhWiyvmjteXZvPrruXMZrvUaV1KhMEUyhGM"]
private-key = ["RAY5qNmDLbNcew4jx9Gvgzp2MWcV3pdBkcLgyGLaNYxd3iTTBnJt3","5JWVj5FXVN5pkuK9Fn4DVFys2GqdFCP2JkCG91tpGc96ZGnriN3"]
private-key = ["RAY6HWtGbzpxXNGQDdRU3BVru5ciQrPfavfY46raJ6U1QBSV7Wsrg","5KMhDF2bPyrDe7munGn7pPuza3TJN8x8vAKNhqCY98hh8R4WBSB"]
private-key = ["RAY8AjvyhehVwL1udSmi8uFPBHEPthcyim2AeDQpJrgdLuiPt1Rsj","5JHxNP9AgY6NkXW9LBLu5FzKQBCSrRhKuTGaYB8Y6UQFT6q1qaw"]

# JSON array of P2P nodes to connect to on startup
seed-nodes = []

# Enable block production, even if the chain is stale.
enable-stale-production = true

# Endpoint for P2P node to listen on
p2p-endpoint = 0.0.0.0:9090

# Endpoint for websocket RPC to listen on
rpc-endpoint = 0.0.0.0:8090

# File to read Genesis State from
genesis-json = main_genesis.json

# Endpoint for P2P node to listen on
# p2p-endpoint =

# P2P nodes to connect to on startup (may specify multiple times)
# seed-node =

# JSON array of P2P nodes to connect to on startup
# seed-nodes =

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint =

# Endpoint for websocket RPC to listen on
# rpc-endpoint =

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint =

# The TLS certificate file for this server
# server-pem =

# Password for this certificate
# server-pem-password =

# File to read Genesis State from
# genesis-json =

# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key =

# JSON file specifying API permissions
# api-access =

# Enable block production, even if the chain is stale.
# enable-stale-production = true

# Percent of witnesses (0-99) that must be participating in order to produce blocks
# required-participation = false

# ID of witness controlled by this node (e.g. "1.5.5", quotes are required, may specify multiple times)
# witness-id =

# Tuple of [PublicKey, WIF private key] (may specify multiple times)
# private-key = ["BTS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]

# Account ID to track history for (may specify multiple times)
# track-account =

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [15,60,300,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 1000)
history-per-size = 1000

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log
# filename can be absolute or relative to this config file

# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=info
appenders=stderr

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
level=debug
appenders=p2p
